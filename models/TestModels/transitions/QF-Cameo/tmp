**** Running the state-machine autocoder with Cameo front end****
../../../../autocoder/QMAutocoder.py qf  -debug ../Transitions.xml
Hello, welcome to the CAMEO xml parser
MagicDraw version = 19.0 v9
---------------- xmi Model ------------
Node('/xmiModel', package='MyPackage', stateMachine='Transitions')
├── Node('/xmiModel/PSUEDOSTATE', id='_19_0_3_9120299_1628893135539_747021_42634')
├── Node('/xmiModel/STATE', entry='s1Entry()', exit='s1Exit()', id='_19_0_3_9120299_1628893135544_707219_42635', stateName='S1')
│   ├── Node('/xmiModel/STATE/STATE', entry='s11Entry()', exit='s11Exit()', id='_19_0_3_9120299_1629492504888_373684_42267', stateName='S11')
│   ├── Node('/xmiModel/STATE/PSUEDOSTATE', id='_19_0_3_9120299_1629492544755_345145_42359')
│   ├── Node('/xmiModel/STATE/TRANSITION', action=None, event=None, guard=None, kind=None, source='_19_0_3_9120299_1629492544755_345145_42359', target='_19_0_3_9120299_1629492504888_373684_42267')
│   └── Node('/xmiModel/STATE/TRANSITION', action='a3()', event='Ev4', guard=None, kind=None, source='_19_0_3_9120299_1629492504888_373684_42267', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/STATE', entry='s2Entry()', exit='s2Exit()', id='_19_0_3_9120299_1629492004609_732471_42163', stateName='S2')
├── Node('/xmiModel/TRANSITION', action='init1(); init2()', event=None, guard=None, kind=None, source='_19_0_3_9120299_1628893135539_747021_42634', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/TRANSITION', action=None, event='Ev1', guard=None, kind=None, source='_19_0_3_9120299_1628893135544_707219_42635', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/TRANSITION', action=None, event='Ev5', guard='g2()', kind=None, source='_19_0_3_9120299_1628893135544_707219_42635', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/TRANSITION', action='a4()', event='Ev6', guard='g3()', kind=None, source='_19_0_3_9120299_1628893135544_707219_42635', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/TRANSITION', action='a1()', event='Ev2', guard=None, kind='internal', source='_19_0_3_9120299_1628893135544_707219_42635', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/TRANSITION', action='a2()', event='Ev3', guard='g1()', kind='internal', source='_19_0_3_9120299_1628893135544_707219_42635', target='_19_0_3_9120299_1628893135544_707219_42635')
├── Node('/xmiModel/TRANSITION', action=None, event='Ev7', guard=None, kind=None, source='_19_0_3_9120299_1628893135544_707219_42635', target='_19_0_3_9120299_1629492004609_732471_42163')
└── Node('/xmiModel/TRANSITION', action=None, event='Ev7', guard=None, kind=None, source='_19_0_3_9120299_1629492004609_732471_42163', target='_19_0_3_9120299_1628893135544_707219_42635')
------------------end------------------
=> After convertXmiToQmModel
---------------- qm Model ------------
Node('/new', package='MyPackage', position=[], stateMachine='Transitions')
├── Node('/new/STATE', entry='s1Entry()', exit='s1Exit()', id='_19_0_3_9120299_1628893135544_707219_42635', position=[1], stateName='S1')
│   ├── Node('/new/STATE/STATE', entry='s11Entry()', exit='s11Exit()', id='_19_0_3_9120299_1629492504888_373684_42267', position=[1, 1], stateName='S11')
│   │   └── Node('/new/STATE/STATE/TRANSITION', action='a3()', event='Ev4', guard=None, position=[1, 1, 1], source='_19_0_3_9120299_1629492504888_373684_42267', target='../../../1')
│   ├── Node('/new/STATE/INIT', action=None, event=None, guard=None, position=[1, 2], target='../1')
│   ├── Node('/new/STATE/TRANSITION', action=None, event='Ev1', guard=None, position=[1, 3], source='_19_0_3_9120299_1628893135544_707219_42635', target='../../1')
│   ├── Node('/new/STATE/TRANSITION', action=None, event='Ev5', guard=None, position=[1, 4], source='_19_0_3_9120299_1628893135544_707219_42635', target=None)
│   │   └── Node('/new/STATE/TRANSITION/CHOICE', action=None, guard='g2()', position=[1, 4, 1], target='../../../1')
│   ├── Node('/new/STATE/TRANSITION', action=None, event='Ev6', guard=None, position=[1, 5], source='_19_0_3_9120299_1628893135544_707219_42635', target=None)
│   │   └── Node('/new/STATE/TRANSITION/CHOICE', action='a4()', guard='g3()', position=[1, 5, 1], target='../../../1')
│   ├── Node('/new/STATE/TRANSITION', action='a1()', event='Ev2', guard=None, position=[1, 6], source='_19_0_3_9120299_1628893135544_707219_42635', target=None)
│   ├── Node('/new/STATE/TRANSITION', action=None, event='Ev3', guard=None, position=[1, 7], source='_19_0_3_9120299_1628893135544_707219_42635', target=None)
│   │   └── Node('/new/STATE/TRANSITION/CHOICE', action='a2()', guard='g1()', position=[1, 7, 1], target=None)
│   └── Node('/new/STATE/TRANSITION', action=None, event='Ev7', guard=None, position=[1, 8], source='_19_0_3_9120299_1628893135544_707219_42635', target='../../2')
├── Node('/new/STATE', entry='s2Entry()', exit='s2Exit()', id='_19_0_3_9120299_1629492004609_732471_42163', position=[2], stateName='S2')
│   └── Node('/new/STATE/TRANSITION', action=None, event='Ev7', guard=None, position=[2, 1], source='_19_0_3_9120299_1629492004609_732471_42163', target='../../1')
└── Node('/new/INIT', action='init1(); init2()', event=None, guard=None, position=[3], target='../1')
------------------end------------------
<model>
  <package name="MyPackage">
    <class name="Transitions">
      <statechart>
        <state name="S1">
          <entry brief="s1Entry()"/>
          <exit brief="s1Exit()"/>
          <state name="S11">
            <entry brief="s11Entry()"/>
            <exit brief="s11Exit()"/>
            <tran trig="Ev4" target="../../../1">
              <action brief="a3()"/>
            </tran>
          </state>
          <initial target="../1"/>
          <tran trig="Ev1" target="../../1"/>
          <tran trig="Ev5">
            <choice target="../../../1">
              <guard brief="g2()"/>
            </choice>
          </tran>
          <tran trig="Ev6">
            <choice target="../../../1">
              <guard brief="g3()"/>
              <action brief="a4()"/>
            </choice>
          </tran>
          <tran trig="Ev2">
            <action brief="a1()"/>
          </tran>
          <tran trig="Ev3">
            <choice>
              <guard brief="g1()"/>
              <action brief="a2()"/>
            </choice>
          </tran>
          <tran trig="Ev7" target="../../2"/>
        </state>
        <state name="S2">
          <entry brief="s2Entry()"/>
          <exit brief="s2Exit()"/>
          <tran trig="Ev7" target="../../1"/>
        </state>
        <initial target="../1">
          <action brief="init1(); init2()"/>
        </initial>
      </statechart>
    </class>
  </package>
</model>

State-machine semantics look good
Generating C Quantum Framework code for Transitions
Generating TransitionsImpl.c
Generating TransitionsImpl.h
Generating main.c
Generating sendEvent.h
Generating sendEvent.c
Generating testDrv.h
Generating testDrv.c
Generating StatechartSignals.h
Generating Transitions.c
Generating Transitions.h
